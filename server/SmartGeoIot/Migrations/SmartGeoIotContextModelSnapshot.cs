// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartGeoIot.Data;

namespace SmartGeoIot.Migrations
{
    [DbContext(typeof(SmartGeoIotContext))]
    partial class SmartGeoIotContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SmartGeoIot.Models.Client", b =>
                {
                    b.Property<string>("ClientUId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasMaxLength(36);

                    b.Property<bool>("Active");

                    b.Property<string>("Address");

                    b.Property<string>("AddressNumber")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("Birth");

                    b.Property<string>("City");

                    b.Property<string>("ClientFatherUId");

                    b.Property<string>("Cpf")
                        .HasMaxLength(11);

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Document")
                        .HasMaxLength(14);

                    b.Property<int>("DocumentType");

                    b.Property<int?>("DueDay");

                    b.Property<string>("Email")
                        .HasMaxLength(255);

                    b.Property<bool>("EmailNotification");

                    b.Property<string>("Item");

                    b.Property<string>("Name")
                        .HasMaxLength(500);

                    b.Property<string>("Neighborhood");

                    b.Property<string>("Phone")
                        .HasMaxLength(14);

                    b.Property<string>("PostalCode")
                        .HasMaxLength(8);

                    b.Property<bool>("PushNotification");

                    b.Property<bool>("SMSNotification");

                    b.Property<DateTime?>("StartBilling");

                    b.Property<string>("State");

                    b.Property<int?>("Type");

                    b.Property<decimal?>("Value")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<bool>("WhatsAppNotification");

                    b.HasKey("ClientUId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("SmartGeoIot.Models.ClientBilling", b =>
                {
                    b.Property<string>("ClientBillingUId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasMaxLength(36);

                    b.Property<string>("BarCode");

                    b.Property<string>("ClientUId");

                    b.Property<DateTime>("Create");

                    b.Property<int>("ExternalId");

                    b.Property<string>("LinkPdf");

                    b.Property<DateTime?>("PaymentDate");

                    b.Property<DateTime?>("PaymentDueDate");

                    b.Property<bool>("Sended");

                    b.Property<string>("Status");

                    b.HasKey("ClientBillingUId");

                    b.HasIndex("ClientUId");

                    b.ToTable("ClientsBillings");
                });

            modelBuilder.Entity("SmartGeoIot.Models.ClientDevice", b =>
                {
                    b.Property<string>("ClientDeviceUId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasMaxLength(36);

                    b.Property<bool>("Active");

                    b.Property<string>("ClientUId");

                    b.Property<string>("Id");

                    b.HasKey("ClientDeviceUId");

                    b.HasIndex("ClientUId");

                    b.HasIndex("Id");

                    b.ToTable("ClientsDevices");
                });

            modelBuilder.Entity("SmartGeoIot.Models.ClientUser", b =>
                {
                    b.Property<string>("ClientUserUId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasMaxLength(36);

                    b.Property<string>("ApplicationUserId");

                    b.Property<string>("ClientUId");

                    b.HasKey("ClientUserUId");

                    b.HasIndex("ClientUId");

                    b.ToTable("ClientsUsers");
                });

            modelBuilder.Entity("SmartGeoIot.Models.Device", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Activable");

                    b.Property<long>("ActivationTime");

                    b.Property<bool>("AutomaticRenewal");

                    b.Property<int>("AutomaticRenewalStatus");

                    b.Property<int>("ComState");

                    b.Property<string>("ContractId");

                    b.Property<string>("CreatedBy");

                    b.Property<long>("CreationTime");

                    b.Property<string>("DeviceTypeId");

                    b.Property<string>("GroupId");

                    b.Property<long>("LastCom");

                    b.Property<string>("LastEditedBy");

                    b.Property<long>("LastEditionTime");

                    b.Property<string>("LocationLat");

                    b.Property<string>("LocationLng");

                    b.Property<int>("Lqi");

                    b.Property<string>("ModemCertificateId");

                    b.Property<string>("Name");

                    b.Property<string>("Pac");

                    b.Property<bool>("Prototype");

                    b.Property<int>("SequenceNumber");

                    b.Property<int>("State");

                    b.Property<string>("TokenDetailMessage");

                    b.Property<long>("TokenEnd");

                    b.Property<int>("TokenState");

                    b.HasKey("Id");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("SmartGeoIot.Models.DeviceLocation", b =>
                {
                    b.Property<string>("DeviceLocationUId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasMaxLength(36);

                    b.Property<string>("Data")
                        .HasMaxLength(50);

                    b.Property<string>("DeviceId");

                    b.Property<double>("Latitude")
                        .HasMaxLength(100);

                    b.Property<double>("Longitude")
                        .HasMaxLength(100);

                    b.Property<string>("Radius")
                        .HasMaxLength(50);

                    b.Property<long>("Time");

                    b.HasKey("DeviceLocationUId");

                    b.ToTable("DevicesLocations");
                });

            modelBuilder.Entity("SmartGeoIot.Models.DeviceRegistration", b =>
                {
                    b.Property<string>("DeviceCustomUId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasMaxLength(36);

                    b.Property<string>("DataDownloadLink")
                        .HasMaxLength(50);

                    b.Property<string>("DeviceId");

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<string>("NickName")
                        .HasMaxLength(100);

                    b.Property<string>("PackageUId");

                    b.Property<string>("ProjectUId");

                    b.HasKey("DeviceCustomUId");

                    b.HasIndex("DeviceId");

                    b.HasIndex("PackageUId");

                    b.HasIndex("ProjectUId");

                    b.ToTable("DevicesRegistration");
                });

            modelBuilder.Entity("SmartGeoIot.Models.Message", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Country");

                    b.Property<string>("Data");

                    b.Property<string>("DeviceId");

                    b.Property<int>("Lqi");

                    b.Property<int>("NbFrames");

                    b.Property<string>("Operator");

                    b.Property<int>("RolloverCounter");

                    b.Property<int>("SeqNumber");

                    b.Property<long>("Time");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("SmartGeoIot.Models.Outgoing", b =>
                {
                    b.Property<string>("OutgoingUId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasMaxLength(36);

                    b.Property<int>("ClientsActive");

                    b.Property<decimal>("DataCenterValue")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<string>("Description");

                    b.Property<decimal>("DevelopmentValue")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<int>("LicensesActive");

                    b.Property<int>("Month");

                    b.Property<decimal>("OperationValue")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("OperationsWNDValue")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<int>("Year");

                    b.HasKey("OutgoingUId");

                    b.ToTable("Outgoings");
                });

            modelBuilder.Entity("SmartGeoIot.Models.Package", b =>
                {
                    b.Property<string>("PackageUId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasMaxLength(36);

                    b.Property<int>("Bit");

                    b.Property<int>("Byte");

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<string>("Type")
                        .HasMaxLength(50);

                    b.HasKey("PackageUId");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("SmartGeoIot.Models.Project", b =>
                {
                    b.Property<string>("ProjectUId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasMaxLength(36);

                    b.Property<string>("Description")
                        .HasMaxLength(400);

                    b.Property<string>("Name")
                        .HasMaxLength(200);

                    b.HasKey("ProjectUId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("SmartGeoIot.Models.VW_Outgoing", b =>
                {
                    b.Property<string>("OutgoingUId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("AverageForClient")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("AverageForLicenseClient")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("AverageLicensesActived")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<int>("ClientsActive");

                    b.Property<decimal>("DataCenterValue")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<string>("Description");

                    b.Property<decimal>("DevelopmentValue")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<int>("LicensesActive");

                    b.Property<int>("Month");

                    b.Property<decimal>("OperationValue")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("OperationsWNDValue")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal>("TotalBilling")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<int>("Year");

                    b.HasKey("OutgoingUId");

                    b.ToTable("VW_Outgoings");
                });

            modelBuilder.Entity("SmartGeoIot.Models.ClientBilling", b =>
                {
                    b.HasOne("SmartGeoIot.Models.Client")
                        .WithMany("Billings")
                        .HasForeignKey("ClientUId");
                });

            modelBuilder.Entity("SmartGeoIot.Models.ClientDevice", b =>
                {
                    b.HasOne("SmartGeoIot.Models.Client")
                        .WithMany("Devices")
                        .HasForeignKey("ClientUId");

                    b.HasOne("SmartGeoIot.Models.Device", "AppDevice")
                        .WithMany()
                        .HasForeignKey("Id");
                });

            modelBuilder.Entity("SmartGeoIot.Models.ClientUser", b =>
                {
                    b.HasOne("SmartGeoIot.Models.Client")
                        .WithMany("Users")
                        .HasForeignKey("ClientUId");
                });

            modelBuilder.Entity("SmartGeoIot.Models.DeviceRegistration", b =>
                {
                    b.HasOne("SmartGeoIot.Models.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId");

                    b.HasOne("SmartGeoIot.Models.Package", "Package")
                        .WithMany()
                        .HasForeignKey("PackageUId");

                    b.HasOne("SmartGeoIot.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectUId");
                });

            modelBuilder.Entity("SmartGeoIot.Models.Message", b =>
                {
                    b.HasOne("SmartGeoIot.Models.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId");
                });
#pragma warning restore 612, 618
        }
    }
}
